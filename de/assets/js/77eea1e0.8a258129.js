"use strict";(self.webpackChunkspoolease_docs=self.webpackChunkspoolease_docs||[]).push([[3478],{3177:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>h,contentTitle:()=>r,default:()=>c,frontMatter:()=>l,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"full-guide/spool-weight","title":"Spool Weight","description":"Spool Weight Glossary","source":"@site/docs/40-full-guide/spool-weight.md","sourceDirName":"40-full-guide","slug":"/full-guide/spool-weight","permalink":"/de/docs/next/full-guide/spool-weight","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"documentationSidebar","previous":{"title":"Scale Config","permalink":"/de/docs/next/full-guide/scale-config"},"next":{"title":"Usage Tips","permalink":"/de/docs/next/full-guide/tips"}}');var o=i(4848),s=i(8453);const l={},r="Spool Weight",h={},a=[{value:"Spool Weight Glossary",id:"spool-weight-glossary",level:2},{value:"Weighting a Spool",id:"weighting-a-spool",level:2},{value:"Updating Spool Weight",id:"updating-spool-weight",level:2},{value:"Weight Tracking While Printing",id:"weight-tracking-while-printing",level:2},{value:"Net Weight Calculations",id:"net-weight-calculations",level:2},{value:"Calibrating the Scale",id:"calibrating-the-scale",level:2}];function d(e){const t={br:"br",h1:"h1",h2:"h2",header:"header",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"spool-weight",children:"Spool Weight"})}),"\n",(0,o.jsx)(t.h2,{id:"spool-weight-glossary",children:"Spool Weight Glossary"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Label Weight"}),(0,o.jsx)(t.br,{}),"\n","The weight printed on the spool's label, typically indicating the nominal filament weight without including the spool itself."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Empty Weight"}),(0,o.jsx)(t.br,{}),"\n","The weight of the spool alone, without any filament. Useful for calculating remaining filament."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Full Weight"}),(0,o.jsx)(t.br,{}),"\n","The total weight of the spool when it is full of filament, including the spool itself."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Gross Weight"}),(0,o.jsx)(t.br,{}),"\n","The current combined weight of the spool and filament, as measured on the scale."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Used Weight"}),(0,o.jsx)(t.br,{}),"\n","The amount of filament that has been used from the spool so far, either through printing or removed/broken/cut in any way."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Net Weight"}),(0,o.jsx)(t.br,{}),"\n","The weight of the filament alone, excluding the spool. Calculated as Gross Weight minus Empty Weight."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Printed Since Added"}),(0,o.jsx)(t.br,{}),"\n","The amount of filament used for printing since the spool was first added to the inventory, tracked via printer activity."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Printed Since Weighted"}),(0,o.jsx)(t.br,{}),"\n","The amount of filament used for printing since the last time the spool was weighed on the scale."]}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.strong,{children:"Consumed Since Load (to AMS)"}),(0,o.jsx)(t.br,{}),"\n","The amount of filament used since the spool was loaded into the AMS (Automatic Material System)."]}),"\n",(0,o.jsx)(t.h2,{id:"weighting-a-spool",children:"Weighting a Spool"}),"\n",(0,o.jsx)(t.h2,{id:"updating-spool-weight",children:"Updating Spool Weight"}),"\n",(0,o.jsx)(t.h2,{id:"weight-tracking-while-printing",children:"Weight Tracking While Printing"}),"\n",(0,o.jsx)(t.h2,{id:"net-weight-calculations",children:"Net Weight Calculations"}),"\n",(0,o.jsx)(t.h2,{id:"calibrating-the-scale",children:"Calibrating the Scale"})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>l,x:()=>r});var n=i(6540);const o={},s=n.createContext(o);function l(e){const t=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);